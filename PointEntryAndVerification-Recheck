<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EcoRank - Events & Signup</title>
    <style>
        /* Basic styling (add more as needed) */
        body { font-family: sans-serif; }
        .form-container { width: 400px; margin: 20px auto; border: 1px solid #ccc; padding: 20px; }
        .event-container { margin-top: 20px; border: 1px solid #ddd; padding: 10px; }
        img { max-width: 100%; height: auto; }
    </style>
</head>
<body>

    <div class="form-container">
        <h2>New Member Signup</h2>
        <form id="newUserForm">
            <label for="newUsername">Username:</label>
            <input type="text" id="newUsername" name="newUsername" required><br><br>
            <button type="submit">Signup</button>
        </form>
        <p id="newUserResult"></p>
    </div>

    <div class="event-container">
        <h2>EcoRank Challenge! - Image Tracker</h2>
        <img src="placeholder-image.jpg" alt="EcoRank Challenge Image">
        <p>Join our image tracking challenge! Upload images related to sustainability.</p>
        <button id="imageTrackerSignup">Signup for Image Tracker</button>
        <p id="imageTrackerResult"></p>
    </div>

    <div class="event-container">
        <h2>EcoRank Challenge! - Water Conservation Event</h2>
        <p>Learn how to save water and earn points.</p>
        <button id="waterEventSignup">Signup for Water Event</button>
        <p id="waterEventResult"></p>
    </div>

    <div class="event-container">
        <h2>EcoRank Challenge! - Recycling Event</h2>
        <p>Participate in recycling activities and earn points.</p>
        <button id="recyclingEventSignup">Signup for Recycling Event</button>
        <p id="recyclingEventResult"></p>
    </div>

    <script>
        // Simulated GitHub Database (replace with actual GitHub API calls)
        const users = []; // In a real app, this would be fetched from GitHub
        const events = {
            imageTracker: [],
            waterEvent: [],
            recyclingEvent: []
        };

        // New User Signup
        document.getElementById('newUserForm').addEventListener('submit', function(event) {
            event.preventDefault();
            const username = document.getElementById('newUsername').value;
            if (username && !users.includes(username)) {
                users.push(username);
                document.getElementById('newUserResult').textContent = `User ${username} signed up!`;
                // In a real app, push this to GitHub.
            } else {
                document.getElementById('newUserResult').textContent = 'Username already exists or is invalid.';
            }
        });

        // Event Signups (replace with real backend logic)
        function handleEventSignup(eventId, resultId) {
            const username = prompt('Enter your username:');
            if (username && users.includes(username)) {
                events[eventId].push(username);
                const groupNumber = Math.floor(Math.random() * 4) + 1; // Random group 1-4
                document.getElementById(resultId).textContent = `${username} signed up! Group ${groupNumber}`;
                // In a real app, push this to GitHub.
            } else {
                document.getElementById(resultId).textContent = 'Invalid username or user not found.';
            }
        }

        document.getElementById('imageTrackerSignup').addEventListener('click', () => handleEventSignup('imageTracker', 'imageTrackerResult'));
        document.getElementById('waterEventSignup').addEventListener('click', () => handleEventSignup('waterEvent', 'waterEventResult'));
        document.getElementById('recyclingEventSignup').addEventListener('click', () => handleEventSignup('recyclingEvent', 'recyclingEventResult'));

    </script>
</body>
</html>